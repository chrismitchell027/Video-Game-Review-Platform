# defines database schemas
USERS_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS users (
    user_id INT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    user_name VARCHAR(25) NOT NULL,
    user_email VARCHAR(50) NOT NULL,
    password CHAR(16) NOT NULL,
    isadmin BOOLEAN NOT NULL,

    CONSTRAINT users_pk PRIMARY KEY (user_id)
);
"""
USER_GAME_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS user_game (
    user_id INT NOT NULL REFERENCES users,
    game_id INT NOT NULL REFERENCES games,

    CONSTRAINT user_game_pk PRIMARY KEY(user_id, game_id)
);
"""
GAMES_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS games (
    game_id INT GENERATED BY DEFAULT AS IDENTITY,
    release_date DATE,
    title VARCHAR(100) NOT NULL,
    pub_id INT,

    CONSTRAINT games_pk PRIMARY KEY(game_id),
    CONSTRAINT games_fk FOREIGN KEY(pub_id) REFERENCES publishers(pub_id)
);
"""
GENRES_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS genres (
    genre_id INT GENERATED BY DEFAULT AS IDENTITY,
    genre_name VARCHAR(50) NOT NULL,

    CONSTRAINT genres_pk PRIMARY KEY(genre_id)
);
"""

REVIEWS_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS reviews (
    review_id INT GENERATED BY DEFAULT AS IDENTITY,
    rating INT NOT NULL CHECK (rating BETWEEN 0 AND 5),
    description VARCHAR(500),
    title VARCHAR(100) NOT NULL,
    game_id INT NOT NULL REFERENCES games,
    user_id INT NOT NULL REFERENCES users,

    CONSTRAINT reviews_pk PRIMARY KEY(review_id)
);
"""
PUBLISHERS_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS publishers (
    pub_id INT GENERATED BY DEFAULT AS IDENTITY,
    pub_name VARCHAR(50),

    CONSTRAINT publishers_pk PRIMARY KEY (pub_id)
);
"""

GAMEGENRE_TABLE_SCHEMA = """
CREATE TABLE IF NOT EXISTS gamegenre (
    game_id INT REFERENCES games,
    genre_id INT REFERENCES genres,

    CONSTRAINT gamegenre_pk PRIMARY KEY(game_id, genre_id)
);
"""

PUBLIC_USERS_VIEW = """
CREATE VIEW public_users AS
    SELECT user_name, isadmin
    FROM users;
"""

PUBLIC_GAMES_VIEW = """
CREATE VIEW public_games AS
    SELECT games.title, genre_name, pub_name, AVG(rating), release_date
    FROM games
        NATURAL JOIN gamegenre
        NATURAL JOIN genres
        NATURAL JOIN publishers
        LEFT OUTER JOIN reviews r ON r.game_id = games.game_id
    GROUP BY
        games.title,
        genre_name,
        release_date,
        pub_name;
"""

PUBLIC_USER_GAME_VIEW = """
CREATE VIEW public_user_game AS
    SELECT ug.user_id, g.title, genre_name, pub_name, pg.release_date
    FROM public_games pg
        JOIN games g ON pg.title = g.title AND pg.release_date = g.release_date
        JOIN user_game ug ON ug.game_id = g.game_id;
"""